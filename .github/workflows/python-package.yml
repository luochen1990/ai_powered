# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        install-ai-powered-cmd:
          - pip install ai_powered
          - poetry build && pip install ai_powered

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dev/test dependencies
      run: |
        python -m pip install --upgrade pip poetry
        python -m pip install flake8 pytest pytest-xdist
    - name: Install The Tested Package
      run: |
        if [[ "${{ github.event.head_commit.message }}" == "version:"* ]]; then
          echo "This is a version bump commit. Installing the package from pypi."
          pip install ai_powered@latest
        else
          echo "This is not a version bump commit. Installing the package from built wheel."
          THIS_PACKAGE_WHL=$(poetry build -f wheel | grep whl | rev | cut -d' ' -f1 | rev)
          pip install ./dist/$THIS_PACKAGE_WHL
        fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        pytest
